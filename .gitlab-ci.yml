# This file is a template, and might need editing before it works on your project.
image: brycemcd/basic-go

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/brycemcd/go-nyctaxi-data-processing
  BINARY_NAME: nyctaxi-data-processing

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - format
  - test
  - build
  # TODO: this was part of the template. Implement later
  #- deploy

format:
  stage: format
  tags:
    - goApp
  script:
    # NOTE: This came with the template. I don't know enough about go to appreciate this
    #- go fmt $(go list ./... | grep -v /vendor/)
    #- go vet $(go list ./... | grep -v /vendor/)
    #- go test -race $(go list ./... | grep -v /vendor/)
    - go fmt .

run_tests:
    stage: test
    tags:
        - goApp
    script:
        - go test -v
compile:
  stage: build
  tags:
    - goApp
  script:
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/$BINARY_NAME
  artifacts:
    paths:
      - ny-taxi-data-processing
    expire_in: 1 week

push_to_servers:
    stage: deploy
    tags:
        - home-network
    # FIXME: do this later
    #only:
    #    - master
    script:
        - scp $BINARY_NAME brycemcd@hopper.thedevranch.net:/tmp/$BINARY_NAME